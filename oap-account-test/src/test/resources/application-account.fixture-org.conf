profiles = [
  ws-security
  prometheus-metrics
  jwt-support
]

boot.main = oap-account

services {
  oap-http {
    oap-http-server.parameters {
      defaultPort.port = ${TEST_HTTP_PORT}
      additionalHttpPorts.httpprivate = ${TEST_HTTP_PORT}
    }
  }

  oap-storage-mongo {
    mongo-client.parameters {
      connectionString = "mongodb://"${mongo.HOST}":"${mongo.PORT}"/account"
      migrationPackage = ${?MONGO_MIGRATIONS_PACKAGE}
    }
  }

  oap-account {
    organization-persistence.parameters.watch = false
    user-persistence.parameters.watch = false

    organization-persistence.parameters.crashDumpPath = ${TEST_DIRECTORY}/organization
    user-persistence.parameters.crashDumpPath = ${TEST_DIRECTORY}/user

    account-mailman.parameters.fromPersonal = Galaxina
    account-mailman.parameters.fromEmail = "galaxina@xenoss.io"
    account-mailman.parameters.confirmUrl = "http://localhost:"${TEST_HTTP_PORT}"/organizations"

    organization-ws.parameters.confirmUrlFinish = "http://xenoss.io"
  }

  oap-ws {
    session-manager.parameters {
      cookieDomain = localhost
      expirationTime = ${SESSION_MANAGER_EXPIRATION_TIME}
    }
  }

  oap-ws-sso {
    oap-ws-sso-user-provider.remote.url = "http://localhost:"${TEST_HTTP_PORT}"/remote/"
    oap-ws-sso-user-provider.remote.name = user-storage
    oap-ws-sso-jwt-security-interceptor.parameters.useOrganizationLogin = true
  }

  oap-ws-sso-api {
    oap-ws-sso-throttle-login-interceptor.parameters.delay = -1
  }

  oap-mail {
    oap-mail-password-authenticator.parameters {
      username = ""
      password = ""
    }
  }

  oap-account {
    user-storage.parameters {
      defaultSystemAdminEmail = "xenoss@xenoss.io"
      defaultSystemAdminEmail = ${?DEFAULT_SYSTEM_ADMIN_EMAIL}
      defaultSystemAdminPassword = Xenoss123
      defaultSystemAdminPassword = ${?DEFAULT_SYSTEM_ADMIN_PASSWORD}
      defaultSystemAdminFirstName = System
      defaultSystemAdminFirstName = ${?DEFAULT_SYSTEM_ADMIN_FIRST_NAME}
      defaultSystemAdminLastName = Admin
      defaultSystemAdminLastName = ${?DEFAULT_SYSTEM_ADMIN_LAST_NAME}
      defaultSystemAdminRoles = {DFLT: ADMIN, SYSTEM: ADMIN}
      defaultSystemAdminRoles = ${?DEFAULT_SYSTEM_ADMIN_ROLES}
      defaultSystemAdminReadOnly = true
      defaultSystemAdminReadOnly = ${?DEFAULT_SYSTEM_READ_ONLY}
    }

    organization-storage.parameters {
      defaultOrganizationId = DFLT
      defaultOrganizationId = ${?DEFAULT_ORGANIZATION_ID}
      defaultOrganizationName = Default
      defaultOrganizationName = ${?DEFAULT_ORGANIZATION_NAME}
      defaultOrganizationDescription = Default organization
      defaultOrganizationDescription = ${?DEFAULT_ORGANIZATION_DESCRIPTION}
      defaultOrganizationReadOnly = true
      defaultOrganizationReadOnly = ${?DEFAULT_ORGANIZATION_READ_ONLY}
    }
  }

  oap-account-social {
    facebook-provider {
      implementation = oap.ws.account.testing.FacebookMockClient
    }
    oauth-service {
      parameters {
        providers = {
          FACEBOOK = <modules.this.facebook-provider>
        }
      }
    }
  }
}
